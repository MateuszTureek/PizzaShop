@using PizzaShop.Models.PizzaShopModels.Entities;
@model PizzaShop.Areas.Admin.Models.ViewModels.PizzaViewModel

<div class="modal-dialog modal-menu" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">
                <span>&times;</span>
            </button>
            <h4>Utwórz nową</h4>
        </div>
        @using (Html.BeginForm("Edit", "Pizza", new { area = "admin" }, FormMethod.Post, new { @id = "PizzaForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m=>m.ID)
            <div class="row modal-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Name, new { @class = "col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(v => v.Name, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PriceForSmall, new { @class = "col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(m => m.PriceForSmall, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(v => v.PriceForSmall, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PriceForMedium, new { @class = "col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(m => m.PriceForMedium, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(v => v.PriceForMedium, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PriceForLarge, new { @class = "col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(m => m.PriceForLarge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(v => v.PriceForLarge, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Components, new { @class = "col-md-3" })
                        <ul id="Draggable" class="col-md-9 list-inline">
                            @foreach (var comp in ViewBag.Components as List<Component>)
                            {
                                <li data-id="@comp.ID" class="draggable label label-default">@comp.Name</li>
                            }
                        </ul>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.Label("Przeciągnij tu składniki", new { @class = "col-md-3" })
                        <ul id="Droppable" class="col-md-9 onDrag">
                            @{
                                List<Component> component = ViewBag.CurrentComponents;
                            }
                            @for (var index = 0; index < component.Count; ++index)
                            {
                                <li data-id="@component[index].ID" class="droped">
                                    @*nput type="hidden" name="Components[@index]" value="@component[index].ID" />*@
                                    @component[index].Name
                                    <div class='close'><span>&times;</span></div>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-admin btn-submit-form">Zapisz zmiany</button>
            </div>
        }
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/dragAndDropVal")